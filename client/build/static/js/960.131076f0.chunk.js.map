{"version":3,"file":"static/js/960.131076f0.chunk.js","mappings":"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","sources":["common/myAxios.ts","components/Loading.tsx","common/SelectBox.tsx","components/FilterBox.tsx","common/constants.ts","components/ShowItem.tsx","pages/Home.tsx","utils/newsStorage.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst myAxios = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'http://parseserver.us:4001'\r\n      : 'http://localhost:4000',\r\n  timeout: 60000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// const myAxios = axios.create({\r\n//   baseURL: 'https://newsapi.org',\r\n//   timeout: 60000,\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     'X-Api-Key': 'b55b26bd9f324b13aa6ec9897cf3ba6c'\r\n//   }\r\n// });\r\n\r\nexport default myAxios;\r\n","import * as React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        justifyContent: 'center'\r\n      }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { SelectBoxProps } from './types';\r\n\r\nconst SelectBox = ({\r\n  value,\r\n  handleChange,\r\n  options,\r\n  name,\r\n  label\r\n}: SelectBoxProps): React.ReactElement => {\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id={`label_${name}`}>{label}</InputLabel>\r\n        <Select\r\n          labelId={`label_${name}`}\r\n          name={name}\r\n          value={value}\r\n          label={label}\r\n          onChange={handleChange}>\r\n          <MenuItem value=\"\">Select</MenuItem>\r\n          {options?.map((item) => {\r\n            return (\r\n              <MenuItem value={item.key} key={item.key}>\r\n                {item.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectBox;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid2';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SelectBox from '../common/SelectBox';\r\nimport { changeEventProps, FilterBoxProps } from '../common/types';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  ...theme.applyStyles('dark', {\r\n    backgroundColor: '#1A2027'\r\n  })\r\n}));\r\n\r\nconst FilterBox = ({\r\n  setVars\r\n}: {\r\n  setVars: React.Dispatch<React.SetStateAction<FilterBoxProps>>;\r\n}) => {\r\n  const [inputState, setInputState] = React.useState<FilterBoxProps>({\r\n    province: '',\r\n    topic: '',\r\n    q: ''\r\n  });\r\n\r\n  const handleChange = (e: changeEventProps) => {\r\n    setInputState((prev: FilterBoxProps) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setVars(inputState);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <SelectBox\r\n                name=\"province\"\r\n                label=\"State\"\r\n                options={[\r\n                  { key: 'california', label: 'California' },\r\n                  { key: 'indiana', label: 'Indiana' }\r\n                ]}\r\n                value={inputState.province}\r\n                handleChange={handleChange}\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <SelectBox\r\n                name=\"topic\"\r\n                label=\"Topic\"\r\n                options={[\r\n                  { key: 'business', label: 'Business' },\r\n                  { key: 'entertainment', label: 'Entertainment' },\r\n                  { key: 'general', label: 'General' },\r\n                  { key: 'health', label: 'Health' },\r\n                  { key: 'sports', label: 'Sports' },\r\n                  { key: 'technology', label: 'Technology' }\r\n                ]}\r\n                value={inputState.topic}\r\n                handleChange={handleChange}\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <TextField\r\n                name=\"q\"\r\n                label=\"Keyword\"\r\n                variant=\"outlined\"\r\n                type=\"search\"\r\n                placeholder=\"keyword to search\"\r\n                value={inputState.q}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n                sx={{ height: 55 }}>\r\n                Search\r\n              </Button>\r\n            </Item>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilterBox;\r\n","export const nofoundimage =\r\n  'https://www.pngitem.com/pimgs/m/439-4390399_placeholder-image-newsletter-clipart-hd-png-download.png';\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArticleType } from '../common/types';\r\nimport { nofoundimage } from '../common/constants';\r\n\r\nconst ShowItem = ({ record }: { record: ArticleType }) => {\r\n  return (\r\n    <li style={{ marginBottom: '30px' }}>\r\n      <div style={{ display: 'flex', gap: '16px' }}>\r\n        <div style={{ maxWidth: '150px', position: 'relative' }}>\r\n          <img\r\n            src={record.urlToImage ?? nofoundimage}\r\n            alt=\"\"\r\n            style={{\r\n              width: '100%'\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}>\r\n          <div\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '14px',\r\n              marginBottom: '10px'\r\n            }}>\r\n            <Link to={`/detail/${record.id}`}>{record.title}</Link>\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: '12px',\r\n              marginBottom: '10px'\r\n            }}>\r\n            {record.description}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              alignItems: 'baseline',\r\n              fontSize: '11px'\r\n            }}>\r\n            {moment(record.publishedAt).fromNow()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ShowItem;\r\n","import React, { useCallback } from 'react';\r\nimport myAxios from '../common/myAxios';\r\nimport Alert from '@mui/material/Alert';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport FilterBox from '../components/FilterBox';\r\nimport { useAtom } from 'jotai';\r\nimport Loading from '../components/Loading';\r\nimport { newsObjectLS } from '../utils/newsStorage';\r\nimport { FilterBoxProps, NewsResultType } from '../common/types';\r\nimport ShowItem from '../components/ShowItem';\r\n\r\nconst TIMEDIFF: number = 60 * 120; // time cache\r\n\r\nconst max = 100;\r\n\r\nexport const fetchNews = async ({\r\n  q,\r\n  province,\r\n  topic,\r\n  page\r\n}: {\r\n  q: string;\r\n  province: string;\r\n  topic: string;\r\n  page: number;\r\n}) => {\r\n  const url = `/news?province=${encodeURIComponent(\r\n    province\r\n  )}&topic=${encodeURIComponent(topic)}&search=${encodeURIComponent(\r\n    q\r\n  )}&page=${page}`;\r\n  const response = await myAxios.get(url);\r\n  return response.data;\r\n};\r\n\r\nconst Home: React.FC = () => {\r\n  // setting some state variables\r\n  // getting data from jotai\r\n  const [newsResult, setNewsResult] = useAtom(newsObjectLS);\r\n  // local state variable to display the data\r\n  const [news, setNews] = React.useState<NewsResultType | null>();\r\n  // search field variables are updated here\r\n  const [vars, setVars]: [\r\n    FilterBoxProps,\r\n    React.Dispatch<React.SetStateAction<FilterBoxProps>>\r\n  ] = React.useState({\r\n    q: '',\r\n    province: '',\r\n    topic: ''\r\n  });\r\n  // flag to delay initial fetchihng\r\n  const [flag, setFlag] = React.useState<boolean>(false);\r\n  // for pagination purpose, page is set from 0 onwards\r\n  const [page, setPage] = React.useState<number>(0);\r\n  // loading will show loading icon\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  // error will show if some error occured\r\n  const [error, setError] = React.useState<string | null>(null);\r\n\r\n  // how many pages are there in this query\r\n  const pages = React.useMemo(() => {\r\n    if (!news?.results?.totalPages) {\r\n      return 0;\r\n    }\r\n    return news?.results?.totalPages;\r\n  }, [news?.results?.totalPages]);\r\n\r\n  // creating state key for saving data in jotai cache\r\n  const stateKey: string = React.useMemo(() => {\r\n    let key = `${page}_${max}`;\r\n    if (vars.province) {\r\n      key += `_${encodeURIComponent(vars.province)}`;\r\n    }\r\n    if (vars.topic) {\r\n      key += `_${encodeURIComponent(vars.topic)}`;\r\n    }\r\n    if (vars.q) {\r\n      key += `_${encodeURIComponent(vars.q)}`;\r\n    }\r\n    return key;\r\n  }, [page, vars]);\r\n\r\n  // on page change we scroll up and update the page state variable and fetch new data for that page\r\n  const handlePageChange = (\r\n    _event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPage(value - 1);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // saving the data in jotai cache\r\n  const handleStateData = useCallback(\r\n    (key: string, data: NewsResultType) => {\r\n      setNewsResult((prev) => {\r\n        return { ...prev, [key]: data };\r\n      });\r\n    },\r\n    [setNewsResult]\r\n  );\r\n\r\n  // function to get data from server or cache\r\n  const getNews = React.useCallback(\r\n    async (forced?: boolean) => {\r\n      try {\r\n        if (!flag) {\r\n          return;\r\n        }\r\n        setLoading(true);\r\n        setError(null);\r\n        // checking if the data is in cache\r\n        if (newsResult[stateKey] && !forced) {\r\n          const currentDate = new Date().getTime();\r\n          const pastDate = newsResult[stateKey]?.expiryRef;\r\n          // if pastdate is found, that means data is in cache\r\n          if (pastDate) {\r\n            const diff = currentDate - pastDate;\r\n            const diffRound = Math.round(diff / 1000);\r\n            // if expiryRef is crossed time limit then we don't need data from cache, else we need it.\r\n            if (diffRound <= TIMEDIFF) {\r\n              // cache time not expired, return it\r\n              console.log(\r\n                'data from cache: ',\r\n                stateKey,\r\n                ', ',\r\n                newsResult[stateKey]\r\n              );\r\n              setNews(newsResult[stateKey]);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        console.log('fresh data: ', stateKey);\r\n        // no data in cache, fetching new data from server\r\n        const r = await fetchNews({ page, ...vars });\r\n        // saving it in jotai storage\r\n        handleStateData(stateKey, {\r\n          ...r,\r\n          expiryRef: new Date().getTime(),\r\n          stateKey\r\n        });\r\n        setNews(r);\r\n      } catch (err: unknown) {\r\n        if (err instanceof Error) {\r\n          setError(err.message);\r\n        } else if (typeof err === 'string') {\r\n          setError(err);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [page, vars, stateKey, handleStateData, newsResult, flag]\r\n  );\r\n\r\n  // on page load, call the news get all\r\n  React.useEffect(() => {\r\n    getNews();\r\n  }, [getNews]);\r\n\r\n  // initial setting of flag to delay the fetch call from api so that we should have result from cache first\r\n  React.useEffect(() => {\r\n    setFlag(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"filter-box\">\r\n        <FilterBox setVars={setVars} />\r\n      </div>\r\n      <div id=\"content\">\r\n        {error && (\r\n          <div>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </div>\r\n        )}\r\n        {loading && <Loading />}\r\n        {news?.results?.rows && news?.results?.rows?.length > 0 && (\r\n          <>\r\n            <ul>\r\n              {news?.results?.rows?.map((record) => {\r\n                return <ShowItem key={record.objectId} record={record} />;\r\n              })}\r\n            </ul>\r\n            <div>\r\n              <Pagination\r\n                count={pages}\r\n                page={page + 1}\r\n                onChange={handlePageChange}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {(!news?.results?.rows || news?.results?.rows.length === 0) &&\r\n          !loading &&\r\n          !error && (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Alert severity=\"warning\">No News Found.</Alert>\r\n            </div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { atom } from 'jotai';\r\nimport { atomWithStorage } from 'jotai/utils';\r\nimport { resultValueType, singleResultValueType } from '../common/types';\r\n\r\nexport const newsObject = atom<Record<string, resultValueType>>({});\r\n\r\nexport const newsObjectLS = atomWithStorage<Record<string, resultValueType>>(\r\n  'newsObjectLS',\r\n  {}\r\n);\r\n\r\nexport const newsSingleObject = atom<Record<string, singleResultValueType>>({});\r\n\r\nexport const newsSingleObjectLS = atomWithStorage<\r\n  Record<string, singleResultValueType>\r\n>('newsSingleObjectLS', {});\r\n"],"names":["axios","create","baseURL","timeout","headers","Loading","_jsx","Box","sx","display","marginTop","marginBottom","justifyContent","children","CircularProgress","_ref","value","handleChange","options","name","label","minWidth","_jsxs","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","MenuItem","map","item","key","Item","styled","Paper","theme","backgroundColor","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","applyStyles","_ref2","setVars","inputState","setInputState","React","province","topic","q","e","prev","target","handleSubmit","preventDefault","flexGrow","onSubmit","Grid","container","size","xs","md","SelectBox","TextField","variant","type","placeholder","Button","onClick","height","_record$urlToImage","record","style","gap","maxWidth","position","src","urlToImage","alt","width","flex","flexDirection","fontWeight","fontSize","Link","to","title","description","alignItems","moment","publishedAt","fromNow","fetchNews","async","page","url","encodeURIComponent","myAxios","get","data","Home","_news$results3","_news$results4","_news$results5","_news$results5$rows","_news$results6","_news$results6$rows","_news$results7","_news$results8","newsResult","setNewsResult","useAtom","newsObjectLS","news","setNews","vars","flag","setFlag","setPage","loading","setLoading","error","setError","pages","_news$results","_news$results2","results","totalPages","stateKey","handleStateData","useCallback","getNews","forced","_newsResult$stateKey","currentDate","Date","getTime","pastDate","expiryRef","diff","Math","round","console","log","r","err","Error","message","FilterBox","Alert","severity","rows","length","_Fragment","ShowItem","objectId","Pagination","count","handlePageChange","_event","window","scrollTo","atom","atomWithStorage","newsSingleObjectLS"],"sourceRoot":""}