{"version":3,"file":"static/js/851.310fad3c.chunk.js","mappings":"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","sources":["common/myAxios.ts","common/SelectBox.tsx","components/FilterBox.tsx","components/Loading.tsx","utils/newsStorage.ts","components/ShowItem.tsx","pages/Home.tsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst myAxios = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'http://parseserver.us:4001'\r\n      : 'http://localhost:4000',\r\n  timeout: 60000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// const myAxios = axios.create({\r\n//   baseURL: 'https://newsapi.org',\r\n//   timeout: 60000,\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     'X-Api-Key': 'b55b26bd9f324b13aa6ec9897cf3ba6c'\r\n//   }\r\n// });\r\n\r\nexport default myAxios;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { SelectBoxProps } from './types';\r\n\r\nconst SelectBox = ({\r\n  value,\r\n  handleChange,\r\n  options,\r\n  name,\r\n  label\r\n}: SelectBoxProps): React.ReactElement => {\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id={`label_${name}`}>{label}</InputLabel>\r\n        <Select\r\n          labelId={`label_${name}`}\r\n          name={name}\r\n          value={value}\r\n          label={label}\r\n          onChange={handleChange}>\r\n          <MenuItem value=\"\">Select</MenuItem>\r\n          {options?.map((item) => {\r\n            return (\r\n              <MenuItem value={item.key} key={item.key}>\r\n                {item.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectBox;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid2';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport SelectBox from '../common/SelectBox';\r\nimport { changeEventProps, FilterBoxProps } from '../common/types';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  ...theme.applyStyles('dark', {\r\n    backgroundColor: '#1A2027'\r\n  })\r\n}));\r\n\r\nconst FilterBox = ({ setQ }: { setQ: (val: string) => void }) => {\r\n  const [inputState, setInputState] = React.useState<FilterBoxProps>({\r\n    state: '',\r\n    topic: '',\r\n    keyword: ''\r\n  });\r\n\r\n  const handleChange = (e: changeEventProps) => {\r\n    setInputState((prev: FilterBoxProps) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setQ(inputState.keyword);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <SelectBox\r\n                name=\"state\"\r\n                label=\"State\"\r\n                options={[\r\n                  { key: 'california', label: 'California' },\r\n                  { key: 'indiana', label: 'Indiana' }\r\n                ]}\r\n                value={inputState.state}\r\n                handleChange={handleChange}\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <SelectBox\r\n                name=\"topic\"\r\n                label=\"Topic\"\r\n                options={[\r\n                  { key: 'business', label: 'Business' },\r\n                  { key: 'entertainment', label: 'Entertainment' },\r\n                  { key: 'general', label: 'General' },\r\n                  { key: 'health', label: 'Health' },\r\n                  { key: 'sports', label: 'Sports' },\r\n                  { key: 'technology', label: 'Technology' }\r\n                ]}\r\n                value={inputState.topic}\r\n                handleChange={handleChange}\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <TextField\r\n                name=\"keyword\"\r\n                label=\"Keyword\"\r\n                variant=\"outlined\"\r\n                type=\"search\"\r\n                placeholder=\"keyword to search\"\r\n                value={inputState.keyword}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n            </Item>\r\n          </Grid>\r\n          <Grid size={{ xs: 6, md: 3 }}>\r\n            <Item>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n                sx={{ height: 55 }}>\r\n                Search\r\n              </Button>\r\n            </Item>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilterBox;\r\n","import * as React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        justifyContent: 'center'\r\n      }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import { atom } from 'jotai';\r\nimport { atomWithStorage } from 'jotai/utils';\r\nimport { resultValueType } from '../common/types';\r\n\r\nexport const newsObject = atom<Record<string, resultValueType>>({});\r\n\r\nexport const newsObjectLS = atomWithStorage<Record<string, resultValueType>>(\r\n  'newsObjectLS',\r\n  {}\r\n);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { ArticleType } from '../common/types';\r\n\r\nconst nofoundimage =\r\n  'https://www.pngitem.com/pimgs/m/439-4390399_placeholder-image-newsletter-clipart-hd-png-download.png';\r\n\r\nconst ShowItem = ({ record }: { record: ArticleType }) => {\r\n  return (\r\n    <li style={{ marginBottom: '30px' }}>\r\n      <div style={{ display: 'flex', gap: '16px' }}>\r\n        <div style={{ maxWidth: '150px', position: 'relative' }}>\r\n          <img\r\n            src={record.urlToImage ?? nofoundimage}\r\n            alt=\"\"\r\n            style={{\r\n              width: '100%'\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}>\r\n          <div\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '14px',\r\n              marginBottom: '10px'\r\n            }}>\r\n            {record.title}\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: '12px',\r\n              marginBottom: '10px'\r\n            }}>\r\n            {record.description}\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              alignItems: 'baseline',\r\n              fontSize: '11px'\r\n            }}>\r\n            {moment(record.publishedAt).fromNow()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ShowItem;\r\n","import React, { useCallback } from 'react';\r\nimport myAxios from '../common/myAxios';\r\nimport Alert from '@mui/material/Alert';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport FilterBox from '../components/FilterBox';\r\nimport { useAtom } from 'jotai';\r\nimport Loading from '../components/Loading';\r\nimport { newsObjectLS } from '../utils/newsStorage';\r\nimport { NewsResultType } from '../common/types';\r\nimport ShowItem from '../components/ShowItem';\r\n\r\nconst TIMEDIFF: number = 60 * 120; // time cache\r\n\r\nconst max = 100;\r\n\r\nexport const getTotalPages = (\r\n  count: number,\r\n  recordsPerPage: number\r\n): number => {\r\n  return Math.floor(count / recordsPerPage);\r\n};\r\n\r\nexport const fetchNews = async ({ q, page }: { q: string; page: number }) => {\r\n  const url = `/news?province=&topic=&search=${encodeURIComponent(\r\n    q\r\n  )}&page=${page}`;\r\n  const response = await myAxios.get(url);\r\n  return response.data;\r\n};\r\n\r\nconst Home: React.FC = () => {\r\n  const [newsResult, setNewsResult] = useAtom(newsObjectLS);\r\n  const [news, setNews] = React.useState<NewsResultType | null>();\r\n  const [q, setQ] = React.useState<string>('');\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n\r\n  const pages = React.useMemo(() => {\r\n    if (!news?.results?.totalPages) {\r\n      return 0;\r\n    }\r\n    return news?.results?.totalPages;\r\n  }, [news?.results?.totalPages]);\r\n\r\n  const stateKey: string = React.useMemo(() => {\r\n    return `${encodeURIComponent(q)}_${page}_${max}`;\r\n  }, [page, q]);\r\n\r\n  const handlePageChange = (\r\n    _event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPage(value - 1);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const handleStateData = useCallback(\r\n    (key: string, data: NewsResultType) => {\r\n      setNewsResult((prev) => {\r\n        return { ...prev, [key]: data };\r\n      });\r\n    },\r\n    [setNewsResult]\r\n  );\r\n\r\n  const getNews = React.useCallback(\r\n    async (forced?: boolean) => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        if (newsResult[stateKey] && !forced) {\r\n          const currentDate = new Date().getTime();\r\n          const pastDate = newsResult[stateKey]?.expiryRef;\r\n          if (pastDate) {\r\n            const diff = currentDate - pastDate;\r\n            const diffRound = Math.round(diff / 1000);\r\n            if (diffRound <= TIMEDIFF) {\r\n              // cache time not expired, return it\r\n              console.log(\r\n                'data from cache: ',\r\n                stateKey,\r\n                ', ',\r\n                newsResult[stateKey]\r\n              );\r\n              setNews(newsResult[stateKey]);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        console.log('fresh data: ', stateKey);\r\n        const r = await fetchNews({ page, q });\r\n        handleStateData(stateKey, {\r\n          ...r,\r\n          expiryRef: new Date().getTime(),\r\n          stateKey\r\n        });\r\n        setNews(r);\r\n      } catch (err: unknown) {\r\n        if (err instanceof Error) {\r\n          setError(err.message);\r\n        } else if (typeof err === 'string') {\r\n          setError(err);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [page, q, stateKey, handleStateData, newsResult]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getNews();\r\n  }, [getNews]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"filter-box\">\r\n        <FilterBox setQ={setQ} />\r\n      </div>\r\n      <div id=\"content\">\r\n        {error && (\r\n          <div>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </div>\r\n        )}\r\n        {loading && <Loading />}\r\n        {news?.results?.rows && news?.results?.rows?.length > 0 && (\r\n          <>\r\n            {' '}\r\n            <ul>\r\n              {news?.results?.rows?.map((record) => {\r\n                return <ShowItem key={record.objectId} record={record} />;\r\n              })}\r\n            </ul>\r\n            <div>\r\n              <Pagination\r\n                count={pages}\r\n                page={page + 1}\r\n                onChange={handlePageChange}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {(!news?.results?.rows || news?.results?.rows.length === 0) &&\r\n          !loading &&\r\n          !error && (\r\n            <div style={{ marginTop: 20 }}>\r\n              <Alert severity=\"warning\">No News Found.</Alert>\r\n            </div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["axios","create","baseURL","timeout","headers","_ref","value","handleChange","options","name","label","_jsx","Box","sx","minWidth","children","_jsxs","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","MenuItem","map","item","key","Item","styled","Paper","theme","backgroundColor","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","applyStyles","_ref2","setQ","inputState","setInputState","React","state","topic","keyword","e","prev","target","handleSubmit","preventDefault","flexGrow","onSubmit","Grid","container","size","xs","md","SelectBox","TextField","variant","type","placeholder","Button","onClick","height","Loading","display","marginTop","marginBottom","justifyContent","CircularProgress","atom","newsObjectLS","atomWithStorage","_record$urlToImage","record","style","gap","maxWidth","position","src","urlToImage","alt","width","flex","flexDirection","fontWeight","fontSize","title","description","alignItems","moment","publishedAt","fromNow","getTotalPages","count","recordsPerPage","Math","floor","fetchNews","async","q","page","url","encodeURIComponent","myAxios","get","data","Home","_news$results3","_news$results4","_news$results5","_news$results5$rows","_news$results6","_news$results6$rows","_news$results7","_news$results8","newsResult","setNewsResult","useAtom","news","setNews","setPage","loading","setLoading","error","setError","pages","_news$results","_news$results2","results","totalPages","stateKey","handleStateData","useCallback","getNews","forced","_newsResult$stateKey","currentDate","Date","getTime","pastDate","expiryRef","diff","round","console","log","r","err","Error","message","FilterBox","Alert","severity","rows","length","_Fragment","ShowItem","objectId","Pagination","handlePageChange","_event","window","scrollTo"],"sourceRoot":""}